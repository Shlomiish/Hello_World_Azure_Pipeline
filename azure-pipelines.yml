trigger:
  - main  # Enable continuous integration for the main branch

pool:
  name: 'Default'

variables:
  buildConfiguration: 'Release'
  packageName: 'HelloWorldApp'
  feedName: 'New_Hello_World'
  projectName: 'Hello_World_pipeline'
  packageVersion: '1.0.$(Build.BuildId)'  # Dynamic version using Build ID
  sonarProjectKey: 'Hello_World_pipeline_Hello_World_pipeline_5439e27a-7696-4cc6-a3f9-16f0e5155ba0'

steps:
# Step 1: Prepare SonarQube for scanning
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'SonarQube_Connection'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'Hello_World_pipeline_Hello_World_pipeline_5439e27a-7696-4cc6-a3f9-16f0e5155ba0'
    cliSources: '.'

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the Project'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: SonarQubeAnalyze@5
  displayName: 'Run SonarQube Analysis'


- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'
  displayName: 'Publish SonarQube Quality Gate'
  
- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'
  displayName: 'Publish SonarQube Quality Gate'

- task: DotNetCoreCLI@2
  displayName: 'Pack the Project'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) /p:PackageId=$(packageName) /p:Version=$(packageVersion)'

- task: DotNetCoreCLI@2
  displayName: 'Push NuGet Package'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '$(projectName)/$(feedName)'
    arguments: '--skip-duplicate'

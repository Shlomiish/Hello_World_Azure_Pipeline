trigger:
  branches:
    include:
      - main

pool:
  name: 'Default'

variables:
  buildConfiguration: 'Release'
  packageName: 'HelloWorldApp'
  feedName: 'New_Hello_World'
  projectName: 'Hello_World_pipeline'
  packageVersion: '1.0.$(Build.BuildId)'  # Dynamic version using Build ID

steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the Project'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: SonarQubePrepare@5
  displayName: 'Prepare SonarQube Analysis'
  inputs:
    SonarQube: 'SonarQube_Connection'  # Replace with your SonarQube connection name
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: '$(projectName)'  # Use project name for key
    cliProjectName: '$(projectName)'  # Use project name
    cliSources: '.'  # Analyze current directory
    extraProperties: |
      sonar.qualitygate.wait=true
      sonar.verbose=true

- task: SonarQubeAnalyze@5
  displayName: 'Run SonarQube Analysis'

- task: SonarQubePublish@5
  displayName: 'Publish SonarQube Results'

- task: DotNetCoreCLI@2
  displayName: 'Pack the Project'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.SourcesDirectory)/nuget_output /p:PackageId=$(packageName) /p:Version=$(packageVersion)'

- task: DotNetCoreCLI@2
  displayName: 'Push NuGet Package'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '$(projectName)/$(feedName)'
    arguments: '--skip-duplicate'

